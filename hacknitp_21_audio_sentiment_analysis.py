# -*- coding: utf-8 -*-
"""HACKNITP-21_audio_sentiment_analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yKhI_5Ku57-8FSWSIM06w448vXFNDO5R
"""

from google.colab import drive
drive.mount('/content/drive/')

#!ls /content/drive/MyDrive

#!unzip "/content/drive/MyDrive/hacknitp_winter_'21_ai_challenge-dataset.zip" -d "/content/drive/MyDrive/Colab Notebooks/code_challenge/HackNITP-21_audio_sentiment_analysis"

!pip3 install SpeechRecognition

import speech_recognition as sr
import glob
import pandas as pd
import numpy as np

def audio(file_name):
    r=sr.Recognizer()
    with sr.AudioFile(file_name) as src:
        audio_text= r.record(src)
    return r.recognize_google(audio_data=audio_text, language='en-US')


def audio_to_text(directory_name):
    final_text=[]
    for fname in glob.glob(directory_name+'/*.wav'):
      try:
        final_text.append(audio(fname))
        print("executed {}..".format(fname))
      except:
        print('Error in converting to text{}...'.format(fname))
        final_text.append('')
    return final_text

dir_name= "/content/drive/MyDrive/Colab Notebooks/code_challenge/HackNITP-21_audio_sentiment_analysis/TRAIN"
text_list = audio_to_text(dir_name)

print(text_list)

text_list_ls =list(text_list)
c=0
for i in text_list_ls:
  if i=='':
    c=c+1
print(c)

import os
print(os.listdir("/content/drive/MyDrive/Colab Notebooks/code_challenge/HackNITP-21_audio_sentiment_analysis/TRAIN"))
print(text_list.count(""))

import pandas as pd
a_train_csv=pd.read_csv("/content/drive/MyDrive/Colab Notebooks/code_challenge/HackNITP-21_audio_sentiment_analysis/TRAIN.csv")
a_train_csv.head(10)

data_f2txt=pd.DataFrame({'Filename': os.listdir("/content/drive/MyDrive/Colab Notebooks/code_challenge/HackNITP-21_audio_sentiment_analysis/TRAIN"), 'text': text_list})
data_f2txt.head(10)

data=pd.merge(data_f2txt, a_train_csv,on='Filename')
data.head(10)

d1_txt_cls=data.drop(['Filename'], axis = 1)
d1_txt_cls.head(10)

from sklearn.model_selection import train_test_split
x= d1_txt_cls.iloc[:,0].values
y= d1_txt_cls.iloc[:,-1].values
print(x[:10])
print(y[:10])

from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import SGDClassifier
from sklearn.svm import LinearSVC
t_vector =TfidfVectorizer()
classifier=LinearSVC()
C1=SGDClassifier()
from sklearn.pipeline import Pipeline
model = Pipeline([('vectorizer',t_vector),('classifier',classifier)])
model.fit(x,y)

#TESTING

dire_name="/content/drive/MyDrive/Colab Notebooks/code_challenge/HackNITP-21_audio_sentiment_analysis/TEST"
test_list = audio_to_text(dire_name)

data_test=pd.DataFrame({'Filename': os.listdir("/content/drive/MyDrive/Colab Notebooks/code_challenge/HackNITP-21_audio_sentiment_analysis/TEST"), 'text': test_list})
data_test.head(10)

x_test=data_test.iloc[:,-1].values
x_test[:10]

#prediction

from sklearn.metrics import confusion_matrix
predictions = model.predict(x_test)
print(len(predictions))
print("prediction", predictions[:10])

#submission

submission= pd.DataFrame({'Filename': os.listdir('/content/drive/MyDrive/Colab Notebooks/code_challenge/HackNITP-21_audio_sentiment_analysis/TEST'), 'Class': predictions})
submission.to_csv('/content/drive/MyDrive/Colab Notebooks/code_challenge/HackNITP-21_audio_sentiment_analysis/output_final.csv', index=False)

sub_csv =pd.read_csv('/content/drive/MyDrive/Colab Notebooks/code_challenge/HackNITP-21_audio_sentiment_analysis/output_final.csv')
sub_csv.head(10)

